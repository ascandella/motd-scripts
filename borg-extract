#!/bin/bash

set -eu
set -o pipefail
THISDIR="$(dirname "$(readlink -f "$0")")"
source "${THISDIR}/common"

# Vars
DASHCOUNT=0
TABLETIME=0
WEREDOINGITLIVE=0

INFILE="${1-}"
if [[ ! -e "${INFILE}" ]] ; then
  if [[ "${INFILE}" == "-" ]] ; then
    INFILE="/dev/stdin"
  else
    echo "Need an input file to process"
    exit 1
  fi
fi

# Functions
max() {
  if [ "$2" -gt "$1" ]; then
    echo "$1"
  else
    echo "$2"
  fi
}

# get rid of some dumb shit
worth_displaying() {
  if [[ "${1}" =~ fingerprint ]] ; then
    return 1
  fi
  if [[ "${1}" =~ hunk ]] ; then
    return 1
  fi
  return 0
}

display_color() {
  if [[ "${1}" =~ size ]] ; then
    echo -ne "\e[48;5;31m${BOLD}"
  fi
  return
}

has_colon() {
  if [[ "${1}" =~ [:] ]] ; then
    return 0
  fi
  return 1
}

trim_whitespace() {
  echo "$(echo -e "${1}" | tr -d [:space]:)"
}

while IFS='' read -r line ; do
  if [[ "${line}" =~ ^--- ]] ; then
    ((DASHCOUNT++)) || true
    # we hit our first important thing
    WEREDOINGITLIVE=1
    case ${DASHCOUNT} in
      1) TABLETIME=1 ;;
      2) TABLETIME=0;;
      *) exit 0 ;;
    esac
    echo
    continue
  fi

  if [[ ${WEREDOINGITLIVE} == 1 ]] ; then
    if worth_displaying "${line}" ; then
      if has_colon "${line}" && [[ ${TABLETIME} == 1 ]] ; then
        first="$(echo "${line}" | cut -d':' -f1)"
        rest="$(echo "${line}" | cut -d':' -f2- | sed 's/^[ ]\+//')"
        printf "%-20s" "${first}"
        say_color "${COLOR_BOLD}" "${rest}"
      else
        color="$(display_color "${line}")"
        say_color "${color}" "${line}"
      fi
    fi
  fi
done < "${INFILE}"
