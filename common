#!/bin/bash
# note: not to be run directly, shebang just for shellcheck
# vim: filetype=sh

THISDIR="$(dirname "$(readlink -f "$0")")"
export THISDIR
set +x

# Paths
export BORG_OUT='/tmp/borg.latest'
export EXTRACT="${THISDIR}/borg-extract"
export BORG="borg"

# Secret keys
BORG_KEYS='/root/.borg'
# shellcheck source=/dev/null
source "${BORG_KEYS}"


# Variables
USER="$(whoami)"
export USER
HOSTNAME="$(uname -n)"
export HOSTNAME

# Colors
export HEADER_COLOR="\e[48;5;237m"
export COLOR_COLUMN="\e[1m-"
export COLOR_YELLOW="\e[93m"
export COLOR_GREEN="\e[92m"
export COLOR_BLUE="\e[36m"  # actually cyan
export COLOR_RED="\e[41m"

# Styles
export STYLE_BOLD="\e[1m"

# Backgrounds
export BACKGROUND_NICE_BLUE="\e[48;5;31m"

# Resets
export RESET_TEXT="\e[0m"
export STYLE_NORMAL="\e[49m"

# Layout
export FIRST_COLUMN=30

# Backup configuration
export NUM_BACKUPS=3

# shellcheck source=./common
source "${BORG_KEYS}"

USER="$(whoami)"
HOSTNAME="$(uname -n)"

# somehowe, we can may this dynamic in the future.
export TARGET_WIDTH=20

display_column1() {
  printf " ${COLOR_COLUMN}- %-$((FIRST_COLUMN - 5))s${RESET_TEXT}" "${1}"
  echo -ne " ${RESET_TEXT}"
}

MULTIPLE_WHITESPACES='[ ]+'
break_columns() {
	local
	WHITESPACE_BREAK="${WHITESPACE_BREAK:-$MULTIPLE_WHITESPACES}"
  local max_cols="${2:-3}"

  while IFS='' read -r line ; do
    local i=1
    while (( i <= max_cols )) ; do
      if [[ $i == $max_cols ]] ; then
        echo ${line}
        break
      fi

      first="$(echo ${line} | awk -F"${WHITESPACE_BREAK}" '{print $1}')"
      local col1_width="$(echo "${first}" | wc -c)"
      printf "%-${FIRST_COLUMN}s" "${first}"
      printf "%-${padding}s" " "
      (( i += 1 ))
      line="$(echo ${line} | cut -c ${col1_width}-)"

      # TODO handle this
    done
  done <<< "${1}"
}

header_1() {
  display_column1 "${1}"
	shift

	echo -e "$@"
  echo -en "${RESET_TEXT}"
}

say_color() {
  printf "%b%b%b\n" "${1}" "${2}" "${RESET_TEXT}"
}

header() {
  say_color "${HEADER_COLOR}" "${1}"
}

reset_color() {
  echo -ne "${RESET_TEXT}"
}

has_delim() {
  if [[ "${1}" =~ [$2] ]] ; then
    return 0
  fi
  return 1
}

trim_whitespace() {
  echo -e "$@" | tr -d '[:space:]'
}
