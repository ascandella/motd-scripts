#!/bin/bash
# from: https://github.com/knotman90/config_files/blob/master/dynmotd

# Installation:
#
# 1.   vim /etc/ssh/sshd_config
#      PrintMotd no
#
# 2.   vim /etc/pam.d/login
#      # session optional pam_motd.so
#
# 3.   vim /etc/profile
#      /usr/local/bin/dynmotd # Place at the bottom
#
# 4.   Then of course drop this file at
#      /usr/local/bin/dynmotd
# #requires fortune cowsay, lm_sensors

set -eu
set -o pipefail

THISDIR="$(dirname "$(readlink -f "$0")")"
# shellcheck source=./common
source "${THISDIR}/common"

USER="$(whoami)"
HOSTNAME="$(uname -n)"
#IP="$(hostname -i)"
#HOME=$(df -Ph | grep home | awk '{print $4}' | tr -d '\n')
#BACKUP=$(df -Ph | grep backup | awk '{print $4}' | tr -d '\n')
NUM_UNIQUE_USERS="$(users | tr ' ' '\n' | sort | uniq | wc -w)"
#MEMORY="$(free -m | grep "Mem" | awk '{print $2,"-",$3,"-",$4}')"
#SWAP=$(free -m | grep "Swap" | awk '{print $2,"-",$3,"-",$4}')
PSA="$(ps -Afl | wc -l)"
TEMPERATURE="$(sensors -f | grep Core | awk '{print $3}' | xargs)"

# System uptime
uptime="$(cut -f1 -d. < /proc/uptime)"
upDays="$((uptime / 60 / 60 / 24))"
upHours="$((uptime / 60 / 60 % 24))"
upMins="$((uptime / 60 % 60))"
upSecs=i"$((uptime % 60))"

# System load
LOAD="$(awk '{print $1, $2, $3}' /proc/loadavg)"

# Get dat sweet, sweet logo
if command -v screenfetch >/dev/null ; then
  screenfetch -L
fi

header_1 "Hostname" "${HOSTNAME}"
header_1 "CPU usage" "${LOAD}"
header_1 "Cores Temperature" "${COLOR_YELLOW}${STYLE_BOLD}${TEMPERATURE}"
header_1 "Processes" "${PSA} running"
header_1 "System uptime" "$upDays days $upHours hours $upMins minutes $upSecs seconds"
header_1 "Users" "Currently ${STYLE_BOLD}${NUM_UNIQUE_USERS}${RESET_TEXT}${COLOR_BLUE} user(s) logged on"

echo

for script in add-borg-to-motd weather ; do
  HELPER="${THISDIR}/${script}"
  if [[ -x "${HELPER}" ]] ; then
    "${HELPER}"
  fi
done

# Leftover columns for reference

# $COLOR_COLUMN- Disk space HOME$RESET_TEXT.....$COLOR_RED $HOME remaining $RESET_TEXT
# $COLOR_COLUMN- Current user$RESET_TEXT        ${COLOR_GREEN} $USER $RESET_TEXT
# $COLOR_COLUMN- Release$RESET_TEXT.............$COLOR_RED `cat /etc/redhat-release` $RESET_TEXT

 #$COLOR_COLUMN- Memory used$RESET_TEXT.........: $COLOR_RED $MEMORY (total-free-used) $RESET_TEXT
 #$COLOR_COLUMN- Swap in use$RESET_TEXT.........: $COLOR_RED $SWAP (total-used-free) MB $RESET_TEXT
 #$COLOR_COLUMN- IP Address$RESET_TEXT..........: $COLOR_BLUE $IP $RESET_TEXT
